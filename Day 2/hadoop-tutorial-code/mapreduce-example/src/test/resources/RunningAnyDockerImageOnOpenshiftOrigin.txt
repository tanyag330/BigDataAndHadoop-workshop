Running Any Docker Image On OpenShift Origin
Posted by: Markus Eisele  in DevOps January 21st, 2016

I’ve been using OpenShift since a while now. For many reasons. First of all, I don’t want to build my own Docker and Kubernetes environment on Windows and second of all, because I like the simple installation. After the Christmas holidays I decided to upgrade my machine to Windows 10. While I like the look and feel, it broke quite a bit of networking and container installments including the Docker and OpenShift environments. Now that I have everything up and running again, it is time to follow the microserivces path a little more. The first thing is to actually get OpenShift up and running and get a development environment setup in which we can simply push Docker images to it without having to use any of the Source-2-Image or OpenShift build mechanisms.
Installing the all-in-one-VM
Download the all-in-one-vm image and import it into the vagrant box. This image is based off of OpenShift Origin and is a fully functioning OpenShift instance with an integrated Docker registry. The intent of this project is to allow Web developers and other interested parties to run OpenShift V3 on their own computer. Given the way it is configured, the VM will appear to your local machine as if it was running somewhere off the machine. Which is exactly what I need to show you around in OpenShift and introduce some more features. If you need a little more assistance follow the method 2 in this earlier blog-post.
I also assume, that you have docker-machine running. You can install it via the Docker Toolbox.
First steps in OpenShift
Fire up the magazine via vagrant up and redirect you browser to https://localhost:8443/. Accept the certificate warning and enter admin/admin as login. You’re now browsing through the admin console. Let’s create a new project to play around with:
1
oc login https://localhost:8443
2
# enter admin/admin as the credentials
3
 
4
oc new-project myfear --description="Testing random Docker Images on OpenShift" --display-name="Myfears test project"
5
 
6
# Add admin role to user myfear
7
oc policy add-role-to-user myfear admin -n myfear
First thing to do is to actually get a MySql database up and running. I want to use that in subsequent blog-posts and it’s a good test to see if everything is working. Get the two json files from the my github repository and execute the following commands:
1
oc create -f mysql-pod.json
2
oc create -f mysql-service.json
Go back to your browser and select the myfear project and see the mysql service up and running with one pod.
